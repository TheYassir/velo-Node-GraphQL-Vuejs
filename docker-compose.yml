networks:
  ovelo:
    driver: bridge
services:
  pgsql:
    image: postgres:14.3-alpine3.16
    environment:
      POSTGRES_PASSWORD: velo
      POSTGRES_USER: velo
    volumes:
      - ./pgsql:/var/lib/postgresql/data
      - ./docker-conf/conf/postgresql/01-structure.sql:/docker-entrypoint-initdb.d/01-structure.sql
      - ./docker-conf/conf/postgresql/02-data.sql:/docker-entrypoint-initdb.d/02-data.sql
    networks:
      - ovelo

  mongo:
    image: mongo:4.2.22
    volumes:
      - ./mongoData:/data/db
      - ./docker-conf/conf/mongo/createUser.js:/docker-entrypoint-initdb.d/createUsers.js
      - ./docker-conf/conf/mongo/createUsersCollection.js:/docker-entrypoint-initdb.d/createUsersCollection.js
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: ovelo
    networks:
      - ovelo

  mongo-server:
    image: node:current-alpine3.16
    volumes:
      - ./auth-rest-api:/var/www/html/auth-rest-api
    ports:
      - '9000:9000'
    expose:
      - '9000'
    environment:
      BASE_URL: http://localhost
      PORT: 9000
      SECRET: secret
      MONGO_URL: mongodb://student:secret@mongo:27017/ovelo
    working_dir: /var/www/html/auth-rest-api
    entrypoint: ['npm', 'run', 'dev', '--host', '0.0.0.0']
    networks:
      - ovelo
    depends_on:
      - mongo
      - mongo-express

  mongo-express:
    image: mongo-express
    ports:
      - '8081:8081'
    expose:
      - '8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_URL: mongodb://root:secret@mongo:27017/
    networks:
      - ovelo
    depends_on:
      - mongo

  client:
     build:
       context: .
       dockerfile: docker-conf/conf/client/client.dockerfile
       args:
          GRAPHQL_URI: http://localhost:4001/graphql
     environment:
       VUE_APP_GRAPHQL_URI: http://localhost:4001/graphql
     ports:
       - '8082:8082'
     expose:
       - '8082'
     stdin_open: true
     volumes:
       - ./frontend:/var/www/html/frontend
     working_dir: /var/www/html/frontend
     networks:
       - ovelo
     entrypoint: ['npm', 'run', 'dev']
     depends_on:
       - graphql-server
       - mongo

  graphql-server:
     build:
       context: .
       dockerfile: docker-conf/conf/graph/graph.dockerfile
     volumes:
       - ./backend:/var/www/html/backend
     networks:
       - ovelo
     ports:
       - '4001:4001'
     expose:
       - '4001'
     working_dir: /var/www/html/backend
     environment:
        BASE_URL: http://localhost
        PORT: 4001
        PGDATABASE: velo
        PGUSER: velo
        PGPASSWORD: velo
        PGHOST: pgsql
        JWT_SECRET: secret
     entrypoint: ['npm', 'run', 'dev', '--host', '0.0.0.0']
     depends_on:
       - pgsql

  adminer:
    build:
      context: .
      dockerfile: docker-conf/conf/adminer/adminer.dockerfile
    ports:
      - '8080:8080'
    depends_on:
      - pgsql
    networks:
      - ovelo
  npm:
    image: node:alpine
    volumes:
      - ./auth-rest-api:/var/www/html/auth-rest-api
    entrypoint: ['npm']
    working_dir: /var/www/html/auth-rest-api
    networks:
      - ovelo
